#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const program = require("commander");
const index_1 = require("./index");
const pkg = require("../package.json");
program
    .version(pkg.version)
    .usage("[options] [files...]")
    .option("-l, --language <language>", "Language of file to beautify")
    // .option("-i, --input-file [file]", "Input file to be beautified")
    .option("-o, --out-file <file>", "Output file of beautified results")
    .option("-r, --replace", "Replace file(s) with beautified results", false)
    .option("-c, --config-file <file>", "Beautifier configuration file")
    .option("--config-json <JSON>", "Beautifier configuration as stringified JSON");
const programArgs = program.parse(process.argv);
const { args: files, language, outFile, replace, configFile, configJson } = programArgs;
index_1.setupUnibeautify()
    .then((unibeautify) => {
    if (!language) {
        process.stderr.write("A language is required.");
        return process.exit(1);
    }
    let config = {};
    if (configJson) {
        try {
            config = JSON.parse(configJson);
        }
        catch (e) {
            process.stderr.write(e.message);
            return process.exit(1);
        }
    }
    /**
    Process stdin or provided files.
    */
    if (files.length === 0) {
        // Process stdin
        // console.log("No files provided");
        process.stdin.resume();
        process.stdin.on("data", (data) => {
            // process.stdout.write(`${new Date()}: ${data}`)
            unibeautify.beautify({
                languageName: language,
                options: config,
                text: data.toString(),
            }).then((result) => {
                process.stdout.write(result);
            });
        });
        process.stdout.on("error", (err) => {
            if (err.code === "EPIPE") {
                return process.exit(1);
            }
            process.emit("warning", err);
        });
    }
    else {
        // Process files
        // console.log("Files", files);
        process.stderr.write("Beautify files is not yet supported.");
        return process.exit(1);
    }
});
//# sourceMappingURL=cli.js.map